---
kind: pipeline
type: docker
name: default

steps:
  - name: setup cluster
    image: kameshsampath/kube-dev-tools:0.1.0
    environment:
      K3D_CLUSTER_NAME: ko-demos
      KUBECONFIG: ./.kube/config.external
      REGISTRY_NAME: myregistry.localhost
    commands:
      - k3d registry create $REGISTRY_NAME --port 5001
      - k3d cluster create $K3D_CLUSTER_NAME --registry-use k3d-$REGISTRY_NAME:5001
      - k3d kubeconfig get "$K3D_CLUSTER_NAME" > "$KUBECONFIG" 
      - sed -i 's|host.docker.internal|127.0.0.1|' "$KUBECONFIG"
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
  - name: ensure registry setup 
    image: kameshsampath/kube-dev-tools:0.1.0
    environment:
       K3D_CLUSTER_NAME: ko-demos
       KUBECONFIG: ./.kube/config.external
       REGISTRY: k3d-myregistry.localhost:5001
    commands:
      - docker pull busybox
      - docker tag busybox k3d-$REGISTRY/busybox
      - docker push k3d-$REGISTRY/busybox
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
  - name: deploy
    image: kameshsampath/kube-dev-tools:0.1.0
    environment:
      K3D_CLUSTER_NAME: ko-demos
      # since the registry will be reached from within docker network
      # use the default registry port of 5000
      KO_DOCKER_REPO: k3d-myregistry.localhost:5000
    commands:
      - k3d kubeconfig get "$K3D_CLUSTER_NAME" > "$KUBECONFIG" 
      - chmod 0700 "$KUBECONFIG"
      - ko apply --insecure-registry -f config/
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: clean
steps:
  - name: delete cluster
    image: rancher/k3d
    environment:
      K3D_CLUSTER_NAME: ko-demos
      KUBECONFIG_DIR: ./.kube
      REGISTRY_NAME: myregistry.localhost
    commands:
      - k3d cluster delete $K3D_CLUSTER_NAME 
      - k3d registry delete $REGISTRY_NAME
      - rm -rf $KUBECONFIG_DIR/*
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock